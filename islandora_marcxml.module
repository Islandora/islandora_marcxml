<?php 

/**
 * Implements hook_menu().
 */
function islandora_marcxml_menu() {
  return array(
    'islandora/object/%islandora_object/view_mods_as_marcxml' => array(
      'title' => 'MARCXML',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_marcxml_view',
      'page arguments' => array(2),
      'access callback' => 'islandora_marcxml_access_callback',
      'access arguments' => array(2),
      'file' => 'islandora_marcxml.inc',
    ),
    'islandora/object/%islandora_object/download_mods_as_marcxml' => array(
      'title' => 'Download MARCXML',
      'type' => MENU_CALLBACK,
      'page callback' => 'islandora_marcxml_transform_mods_to_marcxml',
      'page arguments' => array(2),
      'access callback' => 'islandora_marcxml_access_callback',
      'access arguments' => array(2),
      'delivery callback' => 'islandora_marcxml_xml_download',
      'file' => 'islandora_marcxml.inc',
    ),
  );
}

/**
 * Delivery callback used to download the output as XML.
 */
function islandora_marcxml_xml_download($output) {
  drupal_add_http_header('Content-type', 'text/xml;charset=utf8');
  drupal_add_http_header('Content-length', strlen($output));
  drupal_add_http_header('Content-Disposition', 'attachment; filename="marc.xml"');

  print $output;

  drupal_page_footer();
}

/**
 * Access callback.
 *
 * Requires that the given object contains a MODS datastream (and to be
 * viewable, as per the stock permissions).
 */
function islandora_marcxml_access_callback($object) {
  if (!$object) {
    return FALSE;
  }

  return user_access(FEDORA_VIEW) && isset($object['MODS']);
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_marcxml_islandora_ingest_steps(array $form_state) {
  $return_step = NULL;
  $configuration = islandora_ingest_form_get_configuration($form_state);

  if ($return_step === NULL && module_exists('xml_form_builder')) {
    // XXX:  Need a better way to determine the (potential list of) content
    //   models which are to be bound to an object...  Currently, the only way
    //   this is done is through the association selected in the form builder.

    // XXX:  If there's only one association, there's a chance that this might
    //   miss restricting based on it, as this hook implementation could be
    //   called before the xml_form_builder one...
 
    // Check that association permits the use of MODS.
    $association_storage = islandora_ingest_form_get_step_storage($form_state, 'xml_form_builder_association_step');
    if (isset($association_storage['association'])) {
      $dsids = islandora_get_datastreams_requirements_from_models((array)$association_storage['association']['content_model']);
      $return_step = isset($dsids['MODS']) || ($association_storage['association']['dsid'] == 'MODS');
    }
  }
  
  if ($return_step === NULL && isset($configuration['models'])) {
    $dsids = islandora_get_datastreams_requirements_from_models((array)$configuration['models']);
    $return_step = isset($dsids['MODS']);
  }

  if ($return_step) {
    return array(
      'islandora_marcxml_upload' => array(
	'type' => 'form',
	'weight' => 1,
	'form_id' => 'islandora_marcxml_file_form',
	'args' => array(),
	'file' => 'includes/file.form.inc',
	'module' => 'islandora_marcxml',
      ),
    );
  }
}

